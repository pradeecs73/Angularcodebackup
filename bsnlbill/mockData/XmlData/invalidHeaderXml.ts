/*
* @license
* Copyright (C) Siemens AG 2020-2021 ALL RIGHTS RESERVED.
* Confidential.
*/

export const invalidHeaderXml = {
    invalidXml : 'data:text/xml;base64,<?xml version="1.0" encoding="utf-8"?>
<UANodeSet LastModified="2022-05-12T12:56:58.852Z" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://opcfoundation.org/UA/2011/03/UANodeSet.xsd" xmlns:uax="http://opcfoundation.org/UA/2008/02/Types.xsd" xmlns:si="http://www.siemens.com/OPCUA/2017/SimaticNodeSetExtensions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:s1="http://opcfoundation.org/UA/QoS/Types.xsd" xmlns:ua="http://unifiedautomation.com/Configuration/NodeSet.xsd" xmlns:s2="http://opcfoundation.org/UA/QoS/Types.xsd" xmlns:s3="http://opcfoundation.org/UA/DI/Types.xsd">

    <Models>
        <Model ModelUri="http://www.siemens.com/FillingLine" PublicationDate="2021-06-17T00:00:00Z" Version="1.00">
            <RequiredModel ModelUri="http://opcfoundation.org/UA/" PublicationDate="2019-05-01T00:00:00Z" Version="1.05"/>
        </Model>
        <Model ModelUri="http://siemens.com/plantobjects" PublicationDate="2021-06-09T00:00:00Z" Version="1.00">
            <RequiredModel ModelUri="http://opcfoundation.org/UA/" PublicationDate="2019-05-01T00:00:00Z" Version="1.05"/>
        </Model>
        <Model ModelUri="http://siemens.com/LiquidMixing" PublicationDate="2021-07-09T00:00:00Z" Version="1.00">
            <RequiredModel ModelUri="http://opcfoundation.org/UA/" PublicationDate="2019-05-01T00:00:00Z" Version="1.05"/>
            <RequiredModel ModelUri="http://www.siemens.com/FillingLine" PublicationDate="2021-06-17T00:00:00Z" Version="1.00"/>
            <RequiredModel ModelUri="http://siemens.com/plantobjects" PublicationDate="2021-06-09T00:00:00Z" Version="1.00"/>
        </Model>
    </Models>
    <Aliases>
        <Alias Alias="Boolean">i=1</Alias>
        <Alias Alias="DateTime">i=13</Alias>
        <Alias Alias="String">i=12</Alias>
        <Alias Alias="LocalizedText">i=21</Alias>
        <Alias Alias="HasComponent">i=47</Alias>
        <Alias Alias="HasProperty">i=46</Alias>
        <Alias Alias="Organizes">i=35</Alias>
        <Alias Alias="HasSubtype">i=45</Alias>
        <Alias Alias="HasTypeDefinition">i=40</Alias>
        <Alias Alias="HasModellingRule">i=37</Alias>
        <Alias Alias="HasEncoding">i=38</Alias>
        <Alias Alias="RolePermissionType">i=96</Alias>
        <Alias Alias="IdType">i=256</Alias>
        <Alias Alias="NumericRange">i=291</Alias>
        <Alias Alias="Argument">i=296</Alias>
        <Alias Alias="HasInterface">i=17603</Alias>
    </Aliases>
    <Extensions>
        <Extension>
            <si:Generator Product="SiOME" Edition="Standard" Version="2.0.4"/>
        </Extension>
        <Extension>
            <si:GeneratorExtension Hash="2f2e0b551f49ddd8eba0938adbec36c1"></si:GeneratorExtension>
        </Extension>
    </Extensions>
    <UAObject SymbolicName="http___www_siemens_com_FillingLine" NodeId="ns=1;i=5000" BrowseName="1:http://www.siemens.com/FillingLine">
        <DisplayName>http://www.siemens.com/FillingLine</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">i=11715</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=11616</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="Boolean" NodeId="ns=1;i=6000" BrowseName="IsNamespaceSubset" ParentNodeId="ns=1;i=5000">
        <DisplayName>IsNamespaceSubset</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="DateTime" NodeId="ns=1;i=6001" BrowseName="NamespacePublicationDate" ParentNodeId="ns=1;i=5000">
        <DisplayName>NamespacePublicationDate</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:DateTime>2021-06-17T00:00:00Z</uax:DateTime>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=1;i=6002" BrowseName="NamespaceUri" ParentNodeId="ns=1;i=5000">
        <DisplayName>NamespaceUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:String>http://www.siemens.com/FillingLine</uax:String>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=1;i=6003" BrowseName="NamespaceVersion" ParentNodeId="ns=1;i=5000">
        <DisplayName>NamespaceVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:String>1.00</uax:String>
        </Value>
    </UAVariable>
    <UAVariable DataType="IdType" ValueRank="1" NodeId="ns=1;i=6004" ArrayDimensions="0" BrowseName="StaticNodeIdTypes" ParentNodeId="ns=1;i=5000">
        <DisplayName>StaticNodeIdTypes</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="NumericRange" ValueRank="1" NodeId="ns=1;i=6005" ArrayDimensions="0" BrowseName="StaticNumericNodeIdRange" ParentNodeId="ns=1;i=5000">
        <DisplayName>StaticNumericNodeIdRange</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=1;i=6006" BrowseName="StaticStringNodeIdPattern" ParentNodeId="ns=1;i=5000">
        <DisplayName>StaticStringNodeIdPattern</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="RolePermissionType" ValueRank="1" NodeId="ns=1;i=6007" ArrayDimensions="0" BrowseName="DefaultRolePermissions" ParentNodeId="ns=1;i=5000">
        <DisplayName>DefaultRolePermissions</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=1;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UADataType NodeId="ns=1;i=3000" BrowseName="1:FillingToMixing">
        <DisplayName>FillingToMixing</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5001</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5002</Reference>
        </References>
        <Definition Name="1:FillingToMixing">
            <Field DataType="i=1" Name="Running"/>
            <Field DataType="i=1" Name="Stopped"/>
            <Field DataType="i=1" Name="Held"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
            <Field DataType="i=7" Name="FaultyBottles"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5001" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5002" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3001" BrowseName="1:MixingToFilling">
        <DisplayName>MixingToFilling</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5003</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5004</Reference>
        </References>
        <Definition Name="1:MixingToFilling">
            <Field DataType="i=1" Name="Start"/>
            <Field DataType="i=1" Name="Stop"/>
            <Field DataType="i=1" Name="Hold"/>
            <Field DataType="i=11" Name="AmountLiquid"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5003" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5004" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3002" BrowseName="1:WashingStep2ToFilling">
        <DisplayName>WashingStep2ToFilling</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5005</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5006</Reference>
        </References>
        <Definition Name="1:WashingStep2ToFilling">
            <Field DataType="i=1" Name="Start"/>
            <Field DataType="i=1" Name="Hold"/>
            <Field DataType="i=1" Name="Stop"/>
            <Field DataType="i=7" Name="Speed"/>
            <Field DataType="i=7" Name="NumberBottles"/>
            <Field DataType="i=7" Name="FaultyBottles"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5005" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5006" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3003" BrowseName="1:FillingToWashingStep2">
        <DisplayName>FillingToWashingStep2</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5007</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5008</Reference>
        </References>
        <Definition Name="1:FillingToWashingStep2">
            <Field DataType="i=1" Name="Running"/>
            <Field DataType="i=1" Name="Stopped"/>
            <Field DataType="i=1" Name="Held"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5007" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5008" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3004" BrowseName="1:WashingStep1ToWashingStep2">
        <DisplayName>WashingStep1ToWashingStep2</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5009</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5010</Reference>
        </References>
        <Definition Name="1:WashingStep1ToWashingStep2">
            <Field DataType="i=1" Name="Start"/>
            <Field DataType="i=1" Name="Stop"/>
            <Field DataType="i=1" Name="Hold"/>
            <Field DataType="i=7" Name="Speed"/>
            <Field DataType="i=7" Name="NumberBottles"/>
            <Field DataType="i=7" Name="FaultyBottles"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5009" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5010" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3005" BrowseName="1:WashingStep2ToWashingStep1">
        <DisplayName>WashingStep2ToWashingStep1</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5011</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5012</Reference>
        </References>
        <Definition Name="1:WashingStep2ToWashingStep1">
            <Field DataType="i=1" Name="Running"/>
            <Field DataType="i=1" Name="Stopped"/>
            <Field DataType="i=1" Name="Held"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5011" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5012" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3006" BrowseName="1:MixingToWashingStep1">
        <DisplayName>MixingToWashingStep1</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5013</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5014</Reference>
        </References>
        <Definition Name="1:MixingToWashingStep1">
            <Field DataType="i=1" Name="Start"/>
            <Field DataType="i=1" Name="Stop"/>
            <Field DataType="i=1" Name="Hold"/>
            <Field DataType="i=7" Name="AmountBottles"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5013" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5014" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3007" BrowseName="1:WashingStep1ToMixing">
        <DisplayName>WashingStep1ToMixing</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5015</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5016</Reference>
        </References>
        <Definition Name="1:WashingStep1ToMixing">
            <Field DataType="i=1" Name="Running"/>
            <Field DataType="i=1" Name="Stopped"/>
            <Field DataType="i=1" Name="Held"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5015" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5016" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=1;i=3009" BrowseName="1:WashingStep2ToWashingStep2">
        <DisplayName>WashingStep2ToWashingStep2</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5019</Reference>
            <Reference ReferenceType="HasEncoding">ns=1;i=5020</Reference>
        </References>
        <Definition Name="1:WashingStep2ToWashingStep2">
            <Field DataType="i=1" Name="Running"/>
            <Field DataType="i=1" Name="Stopped"/>
            <Field DataType="i=1" Name="Hold"/>
            <Field DataType="i=1" Name="Error"/>
            <Field DataType="i=5" Name="Status"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=1;i=5019" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=1;i=5020" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="http___siemens_com_plantobjects" NodeId="ns=2;i=5000" BrowseName="2:http://siemens.com/plantobjects">
        <DisplayName>http://siemens.com/plantobjects</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">i=11715</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=11616</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="Boolean" NodeId="ns=2;i=6000" BrowseName="IsNamespaceSubset" ParentNodeId="ns=2;i=5000">
        <DisplayName>IsNamespaceSubset</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="DateTime" NodeId="ns=2;i=6001" BrowseName="NamespacePublicationDate" ParentNodeId="ns=2;i=5000">
        <DisplayName>NamespacePublicationDate</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:DateTime>2021-06-09T00:00:00Z</uax:DateTime>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6002" BrowseName="NamespaceUri" ParentNodeId="ns=2;i=5000">
        <DisplayName>NamespaceUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:String>http://siemens.com/plantobjects</uax:String>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6003" BrowseName="NamespaceVersion" ParentNodeId="ns=2;i=5000">
        <DisplayName>NamespaceVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:String>1.00</uax:String>
        </Value>
    </UAVariable>
    <UAVariable DataType="IdType" ValueRank="1" NodeId="ns=2;i=6004" ArrayDimensions="0" BrowseName="StaticNodeIdTypes" ParentNodeId="ns=2;i=5000">
        <DisplayName>StaticNodeIdTypes</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="NumericRange" ValueRank="1" NodeId="ns=2;i=6005" ArrayDimensions="0" BrowseName="StaticNumericNodeIdRange" ParentNodeId="ns=2;i=5000">
        <DisplayName>StaticNumericNodeIdRange</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6006" BrowseName="StaticStringNodeIdPattern" ParentNodeId="ns=2;i=5000">
        <DisplayName>StaticStringNodeIdPattern</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="RolePermissionType" ValueRank="1" NodeId="ns=2;i=6007" ArrayDimensions="0" BrowseName="DefaultRolePermissions" ParentNodeId="ns=2;i=5000">
        <DisplayName>DefaultRolePermissions</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAObjectType NodeId="ns=2;i=1000" BrowseName="2:PlantObjectRootType">
        <DisplayName>PlantObjectRootType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=61</Reference>
        </References>
    </UAObjectType>
    <UAObjectType NodeId="ns=2;i=1001" BrowseName="2:AutomationComponentType">
        <DisplayName>AutomationComponentType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=58</Reference>
        </References>
    </UAObjectType>
    <UAReferenceType NodeId="ns=2;i=4000" BrowseName="2:HasAutomationComponent">
        <DisplayName>HasAutomationComponent</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=47</Reference>
        </References>
        <InverseName>AutomationComponentOf</InverseName>
    </UAReferenceType>
    <UAReferenceType NodeId="ns=2;i=4001" BrowseName="2:HasInputGroup">
        <DisplayName>HasInputGroup</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=47</Reference>
        </References>
        <InverseName>InputGroupOf</InverseName>
    </UAReferenceType>
    <UAReferenceType NodeId="ns=2;i=4002" BrowseName="2:HasOutputGroup">
        <DisplayName>HasOutputGroup</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=47</Reference>
        </References>
        <InverseName>OutputGrouOf</InverseName>
    </UAReferenceType>
    <UAObject NodeId="ns=2;i=5003" BrowseName="2:FunctionalEntities">
        <DisplayName>FunctionalEntities</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1001</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=61</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAObject>
    <UAObject NodeId="ns=2;i=5005" BrowseName="2:PlantObjectRoot">
        <DisplayName>PlantObjectRoot</DisplayName>
        <References>
            <Reference ReferenceType="Organizes" IsForward="false">i=85</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1000</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="S_AutomationComponent_" NodeId="ns=2;i=5006" BrowseName="2:&lt;AutomationComponent&gt;">
        <DisplayName>&lt;AutomationComponent&gt;</DisplayName>
        <References>
            <Reference ReferenceType="ns=2;i=4000" IsForward="false">ns=2;i=1000</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1001</Reference>
            <Reference ReferenceType="HasModellingRule">i=11508</Reference>
        </References>
    </UAObject>
    <UAObjectType IsAbstract="true" NodeId="ns=2;i=1015" BrowseName="2:IFunctionalEntityType">
        <DisplayName>IFunctionalEntityType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=17602</Reference>
        </References>
    </UAObjectType>
    <UAMethod NodeId="ns=2;i=7002" BrowseName="2:CloseConnection">
        <DisplayName>CloseConnection</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAMethod>
    <UAMethod NodeId="ns=2;i=7004" BrowseName="2:EstablishConnection">
        <DisplayName>EstablishConnection</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAMethod>
    <UAVariable DataType="Argument" ValueRank="1" NodeId="ns=2;i=6016" ArrayDimensions="1" BrowseName="InputArguments" ParentNodeId="ns=2;i=7004">
        <DisplayName>InputArguments</DisplayName>
        <Description>the definition of the input argument of method 1:IFunctionalEntityType.1:EstablishConnection</Description>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=7004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfExtensionObject>
                <uax:ExtensionObject>
                    <uax:TypeId>
                        <uax:Identifier>i=297</uax:Identifier>
                    </uax:TypeId>
                    <uax:Body>
                        <uax:Argument>
                            <uax:Name>ConnectionConfiguration</uax:Name>
                            <uax:DataType>
                                <uax:Identifier>ns=2;i=3002</uax:Identifier>
                            </uax:DataType>
                            <uax:ValueRank>-1</uax:ValueRank>
                            <uax:ArrayDimensions/>
                            <uax:Description/>
                        </uax:Argument>
                    </uax:Body>
                </uax:ExtensionObject>
            </uax:ListOfExtensionObject>
        </Value>
    </UAVariable>
    <UADataType NodeId="ns=2;i=3000" BrowseName="2:ApplicationIdentifierType">
        <DisplayName>ApplicationIdentifierType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5007</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5008</Reference>
        </References>
        <Definition Name="2:ApplicationIdentifierType">
            <Field DataType="i=12" Name="Name"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=2;i=5007" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=2;i=5008" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=2;i=3003" BrowseName="2:PlantObjectVersion">
        <DisplayName>PlantObjectVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5013</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5014</Reference>
        </References>
        <Definition Name="2:PlantObjectVersion">
            <Field DataType="i=5" Name="Major"/>
            <Field DataType="i=5" Name="Minor"/>
            <Field DataType="i=5" Name="Build"/>
            <Field DataType="i=5" Name="SubBuild"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=2;i=5013" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=2;i=5014" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3003" NodeId="ns=2;i=6036" BrowseName="2:AuthorAssignedVersion  " ParentNodeId="ns=2;i=1015" SymbolicName="AuthorAssignedVersion__">
        <DisplayName>AuthorAssignedVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
        <Value>
            <uax:ExtensionObject>
                <uax:TypeId>
                    <uax:Identifier>ns=2;i=5014</uax:Identifier>
                </uax:TypeId>
                <uax:Body>
                    <PlantObjectVersion xmlns="http://siemens.com/plantobjects/Types.xsd">
                        <Major>1</Major>
                        <Minor>0</Minor>
                        <Build>0</Build>
                        <SubBuild>0</SubBuild>
                    </PlantObjectVersion>
                </uax:Body>
            </uax:ExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3000" NodeId="ns=2;i=6038" BrowseName="2:ApplicationIdentifier" ParentNodeId="ns=2;i=1015">
        <DisplayName>ApplicationIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6040" BrowseName="2:AuthorAssignedIdentifier" ParentNodeId="ns=2;i=1015">
        <DisplayName>AuthorAssignedIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6048" BrowseName="2:AuthorUri" ParentNodeId="ns=2;i=1015">
        <DisplayName>AuthorUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UADataType NodeId="ns=2;i=3008" BrowseName="2:ConnectionEndpointStatus">
        <DisplayName>ConnectionEndpointStatus</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=29</Reference>
        </References>
        <Definition Name="2:ConnectionEndpointStatus">
            <Field DataType="i=24" Name="Initial" Value="0"/>
            <Field DataType="i=24" Name="Ready" Value="1"/>
            <Field DataType="i=24" Name="PreOperational" Value="2"/>
            <Field DataType="i=24" Name="Operational" Value="3"/>
            <Field DataType="i=24" Name="Error" Value="4"/>
        </Definition>
    </UADataType>
    <UAVariable DataType="LocalizedText" ValueRank="1" NodeId="ns=2;i=6023" ArrayDimensions="5" BrowseName="EnumStrings" ParentNodeId="ns=2;i=3008" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>EnumStrings</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=3008</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfLocalizedText>
                <uax:LocalizedText>
                    <uax:Text>Initial</uax:Text>
                </uax:LocalizedText>
                <uax:LocalizedText>
                    <uax:Text>Ready</uax:Text>
                </uax:LocalizedText>
                <uax:LocalizedText>
                    <uax:Text>PreOperational</uax:Text>
                </uax:LocalizedText>
                <uax:LocalizedText>
                    <uax:Text>Operational</uax:Text>
                </uax:LocalizedText>
                <uax:LocalizedText>
                    <uax:Text>Error</uax:Text>
                </uax:LocalizedText>
            </uax:ListOfLocalizedText>
        </Value>
    </UAVariable>
    <UAObjectType NodeId="ns=2;i=1002" BrowseName="2:ConnectionEndpointsFolderType">
        <DisplayName>ConnectionEndpointsFolderType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=61</Reference>
        </References>
    </UAObjectType>
    <UAVariable NodeId="ns=2;i=6024" BrowseName="2:InputData" ParentNodeId="ns=2;i=1015" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>InputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAVariable NodeId="ns=2;i=6025" BrowseName="2:InputData" ParentNodeId="ns=2;i=1004" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>InputData</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAVariable NodeId="ns=2;i=6026" BrowseName="2:OutputData" ParentNodeId="ns=2;i=1015">
        <DisplayName>OutputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAVariable NodeId="ns=2;i=6027" BrowseName="2:OutputData" ParentNodeId="ns=2;i=1004" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>OutputData</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAObject NodeId="ns=2;i=5020" BrowseName="2:ConnectionEndpoints">
        <DisplayName>ConnectionEndpoints</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=58</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAObject>
    <UAReferenceType NodeId="ns=2;i=4003" BrowseName="2:HasConnectionEndpoint">
        <DisplayName>HasConnectionEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=47</Reference>
        </References>
        <InverseName>ConnectionEndpointOf</InverseName>
    </UAReferenceType>
    <UAObjectType NodeId="ns=2;i=1003" BrowseName="2:ConnectionEndpointType">
        <DisplayName>ConnectionEndpointType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=58</Reference>
        </References>
    </UAObjectType>
    <UAVariable DataType="ns=2;i=3008" NodeId="ns=2;i=6028" BrowseName="2:Status" ParentNodeId="ns=2;i=1003">
        <DisplayName>Status</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UADataType NodeId="ns=2;i=3009" BrowseName="2:RelatedEndpointDataType">
        <DisplayName>RelatedEndpointDataType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5023</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5024</Reference>
        </References>
        <Definition Name="2:RelatedEndpointDataType">
            <Field DataType="i=12" Name="Address"/>
            <Field DataType="i=12" Name="InputNodeId"/>
            <Field DataType="i=12" Name="OutputNodeId"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=2;i=5023" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=2;i=5024" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3009" NodeId="ns=2;i=6031" BrowseName="2:RelatedEndpoint" ParentNodeId="ns=2;i=1003">
        <DisplayName>RelatedEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAObject SymbolicName="S_ConnectionEndpoint_" NodeId="ns=2;i=5025" BrowseName="2:ConnectionEndpoint">
        <DisplayName>ConnectionEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="ns=2;i=4003" IsForward="false">ns=2;i=1002</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1003</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3009" NodeId="ns=2;i=6011" BrowseName="2:RelatedEndpoint" ParentNodeId="ns=2;i=5025">
        <DisplayName>RelatedEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5025</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3008" NodeId="ns=2;i=6012" BrowseName="2:Status" ParentNodeId="ns=2;i=5025">
        <DisplayName>Status</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5025</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAObject NodeId="ns=2;i=5017" BrowseName="2:ConnectionEndpoints">
        <DisplayName>ConnectionEndpoints</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1015</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1002</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAObject>
    <UAObject NodeId="ns=2;i=5019" BrowseName="2:ConnectionEndpoint">
        <DisplayName>ConnectionEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="ns=2;i=4003" IsForward="false">ns=2;i=5017</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1003</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3009" NodeId="ns=2;i=6009" BrowseName="2:RelatedEndpoint" ParentNodeId="ns=2;i=5019">
        <DisplayName>RelatedEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5019</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3008" NodeId="ns=2;i=6010" BrowseName="2:Status" ParentNodeId="ns=2;i=5019">
        <DisplayName>Status</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5019</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAObjectType NodeId="ns=2;i=1004" BrowseName="2:FunctionalEntityType">
        <DisplayName>FunctionalEntityType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=58</Reference>
            <Reference ReferenceType="HasInterface">ns=2;i=1015</Reference>
        </References>
    </UAObjectType>
    <UAVariable DataType="ns=2;i=3000" NodeId="ns=2;i=6008" BrowseName="2:ApplicationIdentifier" ParentNodeId="ns=2;i=1004">
        <DisplayName>ApplicationIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6013" BrowseName="2:AuthorAssignedIdentifier" ParentNodeId="ns=2;i=1004">
        <DisplayName>AuthorAssignedIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3003" NodeId="ns=2;i=6018" BrowseName="2:AuthorAssignedVersion  " ParentNodeId="ns=2;i=1004" SymbolicName="AuthorAssignedVersion__">
        <DisplayName>AuthorAssignedVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
        <Value>
            <uax:ExtensionObject>
                <uax:TypeId>
                    <uax:Identifier>ns=2;i=5014</uax:Identifier>
                </uax:TypeId>
                <uax:Body>
                    <PlantObjectVersion xmlns="http://siemens.com/plantobjects/Types.xsd">
                        <Major>1</Major>
                        <Minor>0</Minor>
                        <Build>0</Build>
                        <SubBuild>0</SubBuild>
                    </PlantObjectVersion>
                </uax:Body>
            </uax:ExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=2;i=6019" BrowseName="2:AuthorUri" ParentNodeId="ns=2;i=1004">
        <DisplayName>AuthorUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAMethod NodeId="ns=2;i=7000" BrowseName="2:CloseConnection">
        <DisplayName>CloseConnection</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAMethod>
    <UAObject NodeId="ns=2;i=5004" BrowseName="2:ConnectionEndpoints">
        <DisplayName>ConnectionEndpoints</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1002</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAObject>
    <UAVariable NodeId="ns=2;i=6020" BrowseName="2:InputData" ParentNodeId="ns=2;i=1004" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>InputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAVariable NodeId="ns=2;i=6021" BrowseName="2:OutputData" ParentNodeId="ns=2;i=1004">
        <DisplayName>OutputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAVariable>
    <UAObject NodeId="ns=2;i=5018" BrowseName="2:ConnectionEndpoint">
        <DisplayName>ConnectionEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="ns=2;i=4003" IsForward="false">ns=2;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1003</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3009" NodeId="ns=2;i=6033" BrowseName="2:RelatedEndpoint" ParentNodeId="ns=2;i=5018">
        <DisplayName>RelatedEndpoint</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5018</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3008" NodeId="ns=2;i=6034" BrowseName="2:Status" ParentNodeId="ns=2;i=5018">
        <DisplayName>Status</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5018</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAObject SymbolicName="S_FunctionalEntity_" NodeId="ns=2;i=5021" BrowseName="2:&lt;FunctionalEntity&gt;">
        <DisplayName>&lt;FunctionalEntity&gt;</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasModellingRule">i=11508</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3001" NodeId="ns=2;i=6044" BrowseName="2:DetailedStatus" ParentNodeId="ns=2;i=1003">
        <DisplayName>DetailedStatus</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3001" NodeId="ns=2;i=6045" BrowseName="2:DetailedStatus" ParentNodeId="ns=2;i=5018">
        <DisplayName>DetailedStatus</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5018</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3001" NodeId="ns=2;i=6046" BrowseName="2:DetailedStatus" ParentNodeId="ns=2;i=5019">
        <DisplayName>DetailedStatus</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=5019</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
    </UAVariable>
    <UADataType NodeId="ns=2;i=3001" BrowseName="2:ConnectionEndpointStatusDetails">
        <DisplayName>ConnectionEndpointStatusDetails</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5009</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5010</Reference>
        </References>
        <Definition Name="2:ConnectionEndpointStatusDetails">
            <Field DataType="i=7" Name="Connect">
                <Description>Error which occured during OPC UA connect</Description>
            </Field>
            <Field DataType="i=7" Name="ReadNamespaceList">
                <Description>Error which occured during reading the namespaces</Description>
            </Field>
            <Field DataType="i=7" Name="ReadNodeIds"/>
            <Field DataType="i=7" Name="Read"/>
            <Field DataType="i=7" Name="Write"/>
            <Field DataType="i=7" Name="Disconnect"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=2;i=5009" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=2;i=5010" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UADataType NodeId="ns=2;i=3002" BrowseName="2:ConnectionConfigurationType">
        <DisplayName>ConnectionConfigurationType</DisplayName>
        <References>
            <Reference ReferenceType="HasSubtype" IsForward="false">i=22</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5011</Reference>
            <Reference ReferenceType="HasEncoding">ns=2;i=5012</Reference>
        </References>
        <Definition Name="2:ConnectionConfigurationType">
            <Field DataType="i=302" Name="SecurityMode"/>
            <Field DataType="i=12" Name="SecurityPolicyUri"/>
            <Field DataType="i=12" Name="Address"/>
            <Field DataType="i=7" Name="CertificateId"/>
            <Field DataType="i=12" Name="User"/>
            <Field DataType="i=12" Name="Password"/>
            <Field DataType="i=12" Name="SessionName"/>
            <Field DataType="i=6" Name="SessionTimeout"/>
            <Field DataType="i=6" Name="MonitorConnection"/>
            <Field DataType="i=12" Name="InputNodeId"/>
            <Field DataType="i=12" Name="OutputNodeId"/>
        </Definition>
    </UADataType>
    <UAObject SymbolicName="DefaultBinary" NodeId="ns=2;i=5011" BrowseName="Default Binary">
        <DisplayName>Default Binary</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAObject SymbolicName="DefaultXML" NodeId="ns=2;i=5012" BrowseName="Default XML">
        <DisplayName>Default XML</DisplayName>
        <References>
            <Reference ReferenceType="HasTypeDefinition">i=76</Reference>
        </References>
    </UAObject>
    <UAMethod NodeId="ns=2;i=7001" BrowseName="2:EstablishConnection">
        <DisplayName>EstablishConnection</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=2;i=1004</Reference>
            <Reference ReferenceType="HasModellingRule">i=80</Reference>
        </References>
    </UAMethod>
    <UAVariable DataType="Argument" ValueRank="1" NodeId="ns=2;i=6030" ArrayDimensions="1" BrowseName="InputArguments" ParentNodeId="ns=2;i=7001">
        <DisplayName>InputArguments</DisplayName>
        <Description>the definition of the input argument of method 1:IFunctionalEntityType.1:EstablishConnection</Description>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=7001</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfExtensionObject>
                <uax:ExtensionObject>
                    <uax:TypeId>
                        <uax:Identifier>i=297</uax:Identifier>
                    </uax:TypeId>
                    <uax:Body>
                        <uax:Argument>
                            <uax:Name>ConnectionConfiguration</uax:Name>
                            <uax:DataType>
                                <uax:Identifier>ns=2;i=3002</uax:Identifier>
                            </uax:DataType>
                            <uax:ValueRank>-1</uax:ValueRank>
                            <uax:ArrayDimensions/>
                            <uax:Description/>
                        </uax:Argument>
                    </uax:Body>
                </uax:ExtensionObject>
            </uax:ListOfExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="Argument" ValueRank="1" NodeId="ns=2;i=6014" ArrayDimensions="1" BrowseName="OutputArguments" ParentNodeId="ns=2;i=7004" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>OutputArguments</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=7004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfExtensionObject>
                <uax:ExtensionObject>
                    <uax:TypeId>
                        <uax:Identifier>i=297</uax:Identifier>
                    </uax:TypeId>
                    <uax:Body>
                        <uax:Argument>
                            <uax:Name>Success</uax:Name>
                            <uax:DataType>
                                <uax:Identifier>i=1</uax:Identifier>
                            </uax:DataType>
                            <uax:ValueRank>-1</uax:ValueRank>
                            <uax:ArrayDimensions/>
                            <uax:Description/>
                        </uax:Argument>
                    </uax:Body>
                </uax:ExtensionObject>
            </uax:ListOfExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="Argument" ValueRank="1" NodeId="ns=2;i=6015" ArrayDimensions="1" BrowseName="OutputArguments" ParentNodeId="ns=2;i=7001" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>OutputArguments</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=7001</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfExtensionObject>
                <uax:ExtensionObject>
                    <uax:TypeId>
                        <uax:Identifier>i=297</uax:Identifier>
                    </uax:TypeId>
                    <uax:Body>
                        <uax:Argument>
                            <uax:Name>Success</uax:Name>
                            <uax:DataType>
                                <uax:Identifier>i=1</uax:Identifier>
                            </uax:DataType>
                            <uax:ValueRank>-1</uax:ValueRank>
                            <uax:ArrayDimensions/>
                            <uax:Description/>
                        </uax:Argument>
                    </uax:Body>
                </uax:ExtensionObject>
            </uax:ListOfExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="Argument" ValueRank="1" NodeId="ns=2;i=6017" ArrayDimensions="1" BrowseName="OutputArguments" ParentNodeId="ns=2;i=7002" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>OutputArguments</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=7002</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfExtensionObject>
                <uax:ExtensionObject>
                    <uax:TypeId>
                        <uax:Identifier>i=297</uax:Identifier>
                    </uax:TypeId>
                    <uax:Body>
                        <uax:Argument>
                            <uax:Name>Success</uax:Name>
                            <uax:DataType>
                                <uax:Identifier>i=1</uax:Identifier>
                            </uax:DataType>
                            <uax:ValueRank>-1</uax:ValueRank>
                            <uax:ArrayDimensions/>
                            <uax:Description/>
                        </uax:Argument>
                    </uax:Body>
                </uax:ExtensionObject>
            </uax:ListOfExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="Argument" ValueRank="1" NodeId="ns=2;i=6022" ArrayDimensions="1" BrowseName="OutputArguments" ParentNodeId="ns=2;i=7000" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>OutputArguments</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=2;i=7000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
            <Reference ReferenceType="HasModellingRule">i=78</Reference>
        </References>
        <Value>
            <uax:ListOfExtensionObject>
                <uax:ExtensionObject>
                    <uax:TypeId>
                        <uax:Identifier>i=297</uax:Identifier>
                    </uax:TypeId>
                    <uax:Body>
                        <uax:Argument>
                            <uax:Name>Success</uax:Name>
                            <uax:DataType>
                                <uax:Identifier>i=1</uax:Identifier>
                            </uax:DataType>
                            <uax:ValueRank>-1</uax:ValueRank>
                            <uax:ArrayDimensions/>
                            <uax:Description/>
                        </uax:Argument>
                    </uax:Body>
                </uax:ExtensionObject>
            </uax:ListOfExtensionObject>
        </Value>
    </UAVariable>
    <UAObject SymbolicName="http___siemens_com_LiquidMixing" NodeId="ns=3;i=5000" BrowseName="3:http://siemens.com/LiquidMixing">
        <DisplayName>http://siemens.com/LiquidMixing</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">i=11715</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=11616</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="Boolean" NodeId="ns=3;i=6000" BrowseName="IsNamespaceSubset" ParentNodeId="ns=3;i=5000">
        <DisplayName>IsNamespaceSubset</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="DateTime" NodeId="ns=3;i=6001" BrowseName="NamespacePublicationDate" ParentNodeId="ns=3;i=5000">
        <DisplayName>NamespacePublicationDate</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:DateTime>2021-07-09T00:00:00Z</uax:DateTime>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6002" BrowseName="NamespaceUri" ParentNodeId="ns=3;i=5000">
        <DisplayName>NamespaceUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:String>http://siemens.com/LiquidMixing</uax:String>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6003" BrowseName="NamespaceVersion" ParentNodeId="ns=3;i=5000">
        <DisplayName>NamespaceVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:String>1.00</uax:String>
        </Value>
    </UAVariable>
    <UAVariable DataType="IdType" ValueRank="1" NodeId="ns=3;i=6004" ArrayDimensions="0" BrowseName="StaticNodeIdTypes" ParentNodeId="ns=3;i=5000">
        <DisplayName>StaticNodeIdTypes</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="NumericRange" ValueRank="1" NodeId="ns=3;i=6005" ArrayDimensions="0" BrowseName="StaticNumericNodeIdRange" ParentNodeId="ns=3;i=5000">
        <DisplayName>StaticNumericNodeIdRange</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6006" BrowseName="StaticStringNodeIdPattern" ParentNodeId="ns=3;i=5000">
        <DisplayName>StaticStringNodeIdPattern</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="RolePermissionType" ValueRank="1" NodeId="ns=3;i=6007" ArrayDimensions="0" BrowseName="DefaultRolePermissions" ParentNodeId="ns=3;i=5000">
        <DisplayName>DefaultRolePermissions</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5000</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAObject NodeId="ns=3;i=5001" BrowseName="3:LiquidMixing">
        <DisplayName>LiquidMixing</DisplayName>
        <References>
            <Reference ReferenceType="ns=2;i=4000" IsForward="false">ns=2;i=5005</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1001</Reference>
        </References>
    </UAObject>
    <UAObject NodeId="ns=3;i=5002" BrowseName="2:FunctionalEntities">
        <DisplayName>FunctionalEntities</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5001</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=61</Reference>
        </References>
    </UAObject>
    <UAObject NodeId="ns=3;i=5003" BrowseName="3:FillingToMixing">
        <DisplayName>FillingToMixing</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5002</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1004</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3000" NodeId="ns=3;i=6008" BrowseName="2:ApplicationIdentifier" ParentNodeId="ns=3;i=5003">
        <DisplayName>ApplicationIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Extensions>
            <Extension>
                <si:VariableMapping>"PlantComm_BottleFilling"."ApplicationIdentifier"</si:VariableMapping>
            </Extension>
        </Extensions>
        <Value>
            <uax:ExtensionObject>
                <uax:TypeId>
                    <uax:Identifier>ns=2;i=5008</uax:Identifier>
                </uax:TypeId>
                <uax:Body>
                    <ApplicationIdentifierType xmlns="http://siemens.com/plantobjects/Types.xsd">
                        <Name>FillToMix_Type</Name>
                    </ApplicationIdentifierType>
                </uax:Body>
            </uax:ExtensionObject>
        </Value>
    </UAVariable>
    <UAObject NodeId="ns=3;i=5004" BrowseName="3:Washing1ToMixing">
        <DisplayName>Washing1ToMixing</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5002</Reference>
            <Reference ReferenceType="HasTypeDefinition">ns=2;i=1004</Reference>
        </References>
    </UAObject>
    <UAVariable DataType="ns=2;i=3000" NodeId="ns=3;i=6009" BrowseName="2:ApplicationIdentifier" ParentNodeId="ns=3;i=5004">
        <DisplayName>ApplicationIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Extensions>
            <Extension>
                <si:VariableMapping>"PlantComm_WashingStep1"."ApplicationIdentifier"</si:VariableMapping>
            </Extension>
        </Extensions>
        <Value>
            <uax:ExtensionObject>
                <uax:TypeId>
                    <uax:Identifier>ns=2;i=5008</uax:Identifier>
                </uax:TypeId>
                <uax:Body>
                    <ApplicationIdentifierType xmlns="http://siemens.com/plantobjects/Types.xsd">
                        <Name>Wash1ToMix_Type</Name>
                    </ApplicationIdentifierType>
                </uax:Body>
            </uax:ExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6010" BrowseName="2:AuthorAssignedIdentifier" ParentNodeId="ns=3;i=5003">
        <DisplayName>AuthorAssignedIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3003" NodeId="ns=3;i=6011" BrowseName="2:AuthorAssignedVersion  " ParentNodeId="ns=3;i=5003" SymbolicName="AuthorAssignedVersion__">
        <DisplayName>AuthorAssignedVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:ExtensionObject>
                <uax:TypeId>
                    <uax:Identifier>ns=2;i=5014</uax:Identifier>
                </uax:TypeId>
                <uax:Body>
                    <PlantObjectVersion xmlns="http://siemens.com/plantobjects/Types.xsd">
                        <Major>1</Major>
                        <Minor>0</Minor>
                        <Build>0</Build>
                        <SubBuild>0</SubBuild>
                    </PlantObjectVersion>
                </uax:Body>
            </uax:ExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6012" BrowseName="2:AuthorUri" ParentNodeId="ns=3;i=5003">
        <DisplayName>AuthorUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=1;i=3000" NodeId="ns=3;i=6013" BrowseName="2:InputData" ParentNodeId="ns=3;i=5003" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>InputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
        </References>
        <Extensions>
            <Extension>
                <si:VariableMapping>"PlantComm_BottleFilling"."InputData"."variable"</si:VariableMapping>
            </Extension>
        </Extensions>
    </UAVariable>
    <UAVariable DataType="ns=1;i=3001" NodeId="ns=3;i=6014" BrowseName="2:OutputData" ParentNodeId="ns=3;i=5003">
        <DisplayName>OutputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5003</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
        </References>
        <Extensions>
            <Extension>
                <si:VariableMapping>"PlantComm_BottleFilling"."OutputData"."variable"</si:VariableMapping>
            </Extension>
        </Extensions>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6015" BrowseName="2:AuthorAssignedIdentifier" ParentNodeId="ns=3;i=5004">
        <DisplayName>AuthorAssignedIdentifier</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="String" NodeId="ns=3;i=6016" BrowseName="2:AuthorUri" ParentNodeId="ns=3;i=5004">
        <DisplayName>AuthorUri</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
    </UAVariable>
    <UAVariable DataType="ns=2;i=3003" NodeId="ns=3;i=6017" BrowseName="2:AuthorAssignedVersion  " ParentNodeId="ns=3;i=5004" SymbolicName="AuthorAssignedVersion__">
        <DisplayName>AuthorAssignedVersion</DisplayName>
        <References>
            <Reference ReferenceType="HasProperty" IsForward="false">ns=3;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=68</Reference>
        </References>
        <Value>
            <uax:ExtensionObject>
                <uax:TypeId>
                    <uax:Identifier>ns=2;i=5014</uax:Identifier>
                </uax:TypeId>
                <uax:Body>
                    <PlantObjectVersion xmlns="http://siemens.com/plantobjects/Types.xsd">
                        <Major>1</Major>
                        <Minor>0</Minor>
                        <Build>0</Build>
                        <SubBuild>0</SubBuild>
                    </PlantObjectVersion>
                </uax:Body>
            </uax:ExtensionObject>
        </Value>
    </UAVariable>
    <UAVariable DataType="ns=1;i=3007" NodeId="ns=3;i=6018" BrowseName="2:InputData" ParentNodeId="ns=3;i=5004" UserAccessLevel="3" AccessLevel="3">
        <DisplayName>InputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
        </References>
        <Extensions>
            <Extension>
                <si:VariableMapping>"PlantComm_WashingStep1"."InputData"."variable"</si:VariableMapping>
            </Extension>
        </Extensions>
    </UAVariable>
    <UAVariable DataType="ns=1;i=3006" NodeId="ns=3;i=6019" BrowseName="2:OutputData" ParentNodeId="ns=3;i=5004">
        <DisplayName>OutputData</DisplayName>
        <References>
            <Reference ReferenceType="HasComponent" IsForward="false">ns=3;i=5004</Reference>
            <Reference ReferenceType="HasTypeDefinition">i=63</Reference>
        </References>
        <Extensions>
            <Extension>
                <si:VariableMapping>"PlantComm_WashingStep1"."OutputData"."variable"</si:VariableMapping>
            </Extension>
        </Extensions>
    </UAVariable>
</UANodeSet>'
};

